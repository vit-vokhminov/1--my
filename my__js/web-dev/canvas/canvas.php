<?php include '../../../include/header.php'; ?>



<div class="linear" id="unit1">
    <h1>Свойства и методы элемента canvas</h1>

    <p>Метод <code>getContext()</code> возвращает объект, предоставляющий методы и свойства для рисования в элементе <code>&lt;canvas&gt;</code>.</p>
    <p>Cвойства и методs объекта <code>getContext("2d")</code></p>

    <a href="https://msiter.ru/references/canvas-reference" target="_blank">Сайт</a>
    <br>
    <br>
    <p><b>Цвета, стили, тени</b></p>

    <pre class="brush: js;">
        fillStyle	                // Устанавливает/возвращает цвет, градиент или шаблон, используемый для заливки графического объекта
        shadowBlur	                // Устанавливает/возвращает уровень размытости для теней
        shadowColor	                // Устанавливает/возвращает цвет для теней
        shadowOffsetX	            // Устанавливает/возвращает горизонтальное расстояние тени от фигуры
        shadowOffsetY	            // Устанавливает/возвращает вертикальное расстояние тени от фигуры
        strokeStyle	                // Устанавливает/возвращает цвет, градиент или шаблон, используемый для обводки фигуры

        addColorStop()	            // Определяет цвета и позицию остановки в объекте градиента
        createLinearGradient()	    // Создает линейный градиент (для использования с содержимым элемента &lt;canvas&gt;)
        createPattern()	            // Размножает заданный элемент в заданном направлении
        createRadialGradient()	    // Создает радиальный/круговой градиент (для использования на содержимом элемента &lt;canvas&gt;)
    </pre>
    <br>

    <p><b>Стили линий</b></p>

    <pre class="brush: js;">
        lineCap	                    // Устанавливает/возвращает стиль концов нарисованной линии
        lineJoin	                // Устанавливает/возвращает тип угла, созданного пересечением двух линий
        lineWidth	                // Устанавливает/возвращает ширину текущей линии
        miterLimit	                // Устанавливает/возвращает максимальную длину среза
    </pre>
    <br>

    <p><b>Прямоугольники</b></p>

    <pre class="brush: js;">
        clearRect()	                // Очищает заданную область пикселей внутри данного прямоугольника
        fillRect()	                // Рисует "залитый" прямоугольник
        rect()	                    // Создает прямоугольник
        strokeRect()	            // Рисует прямоугольник (без заливки)
    </pre>
    <br>

    <p><b>Контуры</b></p>

    <pre class="brush: js;">
        arc()	                    // Создает дугу/кривую (используется для создания окружностей или их части)
        arcTo()	                    // Создает дугу/кривую между двумя касательными
        beginPath()	                // Начинает контур или сбрасывает текущий контур
        bezierCurveTo()	            // Создает кубическую кривую Безье
        clip()	                    // Обрезает область любой формы и размера, находящуюся вне указанного контура
        closePath()	                // Замыкает контур соединяя последнюю точку с первой
        fill()	                    // Делает заливку текущей фигуры (контура)
        isPointInPath()	            // Возвращает значение true, если заданная точка находится внутри текущего контура, в обратном случае возвращается значение false
        lineTo()	                // Добавляет новую точку контура и создает линию к этой точке от последней заданной точки
        moveTo()	                // Передвигает точку контура в заданные координаты не рисуя линию
        quadraticCurveTo()	        // Создает квадратичную кривую Безье
        stroke()	                // В действительности рисует определенный вами контур
    </pre>
    <br>

    <p><b>Трансформации</b></p>

    <pre class="brush: js;">
        rotate()	                // Поворачивает текущий графический объект
        scale()	                    // Изменяет масштаб текущего графического объекта
        setTransform()	            // Сбрасывает текущую матрицу трансформации в начальное состояние, а затем вызывает метод transform() с теми же параметрами
        transform()	                // Применяет заданную матрицу трансформации
        translate()	                // Ретранслирует позицию (0,0) в новое место
    </pre>
    <br>

    <p><b>Текст</b></p>

    <pre class="brush: js;">
        font	                    // Устанавливает/возвращает свойства шрифта для текстового содержимого
        textAlign	                // Устанавливает/возвращает выравнивание для текстового содержимого
        textBaseline	            // Устанавливает/возвращает базовую линию, используемую при выводе текста

        fillText()	                // Рисует текст с заливкой
        measureText()	            // Возвращает объект, содержащий ширину заданного текста
        strokeText()	            // Рисует текст без заливки
    </pre>
    <br>

    <p><b>Вывод изображений</b></p>

    <pre class="brush: js;">
        drawImage()	                // Рисует изображение, содержимое другого элемента &lt;canvas&gt; или видео
    </pre>
    <br>

    <p><b>Пиксельные манипуляции</b></p>

    <pre class="brush: js;">
        data	                    // Возвращает объект, содержащий данные изображения заданного объекта ImageData
        height	                    // Возвращает высоту объекта ImageData
        width	                    // Возвращает ширину объекта ImageData

        createImageData()	        // Создает новый, пустой объект ImageData
        getImageData()	            // Возвращает объект ImageData, который копирует пиксельные данные заданной прямоугольной области холста
        putImageData()	            // Помещает данные изображения (из заданного объекта ImageData) обратно в элемент &lt;canvas&gt;
    </pre>
    <br>

    <p><b>Компоновка</b></p>

    <pre class="brush: js;">
        globalAlpha	                // Устанавливает/возвращает текущее значение прозрачности или альфа-канала графического объекта
        globalCompositeOperation	// Устанавливает/возвращает то, как исходное (новое) изображение нарисовано на целевом (существующем) изображении
    </pre>
    <br>

    <p><b>Другое</b></p>

    <pre class="brush: js;">
        save()	                    // Сохраняет состояние текущего контекста
        restore()	                // Возвращает ранее сохраненное состояние и атрибуты
    </pre>
    <br>

</div>




<!--

    <div class="linear" id="use_strict">
     <h1>111111111111111111111111111111</h1>

        <div class="mist">
            <div class="mist__top">
                <p><b>Домашнее задание</b></p>
            </div>
            <div class="mist__bot">
                    <pre class="brush: js;">



                    </pre>
            </div>
        </div>

    </div>

-->

<!--

<div class="mist">
    <div class="mist__top">
        <p><b>Домашнее задание</b></p>
    </div>
    <div class="mist__bot">
            <pre class="brush: js;">



            </pre>
    </div>
</div>

-->

<?php include '../../../include/footer.php'; ?>
