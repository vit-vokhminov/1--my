// Task 1
// Создайте функцию func_1, которая возращает строку от нуля до 100 в формате
// 0 1 2. .100(после 100 тоже есть пробел)
// задание сделать с помощью while

function func_1() {
    let i = 0;
    let txt = '';
    while( i <= 100){
        txt += i + ' ';
        i++;
    }
    return txt;
}


// Task 2
// Создайте функцию func_2, которая принимает от пользователя 2 параметра числа и возращает строку от первого числа до второго с шагом 1. Разделитель пробел.
// Пример: пользователь ввел 5 и 7
// 5 6 7
// считаем что второе число всегда больше первого. Решаем с помощью while

function func_2(a, b) {
    let txt = '';
    while( a <= b){
        txt += a + ' ';
        a++;
    }
    return txt;
}


// Task 3
// Создайте функцию func_3, которая принимает от пользователя 2 параметра числа и возращает строку от большего числа меньшего с шагом 1. Разделитель пробел.
// Пример: пользователь ввел 5 и 7
// 7 6 5
// Решаем с помощью while

function func_3(a, b) {
    let txt = '';

    while( b >= a ){
        txt += b + ' ';
        b--;
    }

    return txt;
}



// Task 4
// Создайте функцию func_4, которая принимает от пользователя 3 параметра(число, число и шаг) и возращает строку от большего числа меньшего с заданным. Разделитель пробел.
// Пример: пользователь ввел 1 5 2
// 5 3 1
// Решаем с помощью while

function func_4(a, b, c) {
    let txt = '';

    while( b >= a ){
        txt += b + ' ';
        b -= c;
    }

    return txt;
}



// Task5
// С помощью цикла
// while создайте функцию func_5, считает и возвращает сумму чисел от 0 до 20.

function func_5(a, b) {
    let txt = 0;

    while( a <= b ){
        txt += a;
        a++;
    }

    return txt;
}



// Task 6
// C помощью цикла
// while создайте функцию func_6, которая принимает 2 параметра, и если второй параметр больше первого, то возвращает сумму чисел от первого до второго включительно. Если нет - то false.Считаем, что пользователь может ввести только числа.

function func_6(a, b) {
    let txt = 0;
    if ( b > a ) {
        while( a <= b ){
            txt += a;
            a++;
        }
    }else {
        txt = false;
    }

    return txt;
}



// Task 7
// C помощью цикла
// while создайте функцию func_7, которая принимает 2 параметра, и если второй параметр больше первого, то возвращает произведение чисел от первого до второго включительно.Если нет - то false.Считаем, что пользователь может ввести только числа.

function func_7(a, b) {
    let txt = 1;
    if ( b > a ) {
        while( a <= b ){
            txt *= a;
            a++;
        }
    }else {
        txt = false;
    }

    return txt;
}



// Task 8
// У пользователя есть 333 монеты в кармане.Каждый день, начиная с первого количество монет увеличиваетя в 2 раза. Напишите функцию func_8, которая вернет день, в который количество монет станет больше или равно 1 000 000.

function func_8() {

    let coins = 333;
    let day = 1;
    while( coins < 1000000 ){
        coins *= 2;
        day++;
    }

    return day;
}



// Task 9
// Создайте функцию func_9, которая принимает 2 параметра и возращает строку от первого до второго введенного параграфа, где все четные числа заменены на символ нуля(0).

function func_9(a, b) {
    let txt = '';
    while( a <= b){
        if( a % 2 ){
            txt += a + ' ';
        }else{
            txt += 0 + ' ';
        }
        a++;
    }
    return txt;
}



// Task 10
// Cоздайте функцию func_10, которая вернет строку(решаем через
//         while):
//     **
//     *
//     **
//     *
//     **
//     *

function func_10() {
    let txt = '';
    let i = 0;
    while( i < 6 ){
        if( i % 2 ){
            txt += '*<br>';
        }else{
            txt += '**<br>';
        }
        i++;
    }
    return txt;
}



// Task 11
// Создайте функцию func_11, которая вернет следующую строку: 10 1 9 2 8 3. . 1 10. Решаем через
// while.

function func_11() {
    let txt = '';
    let a = 1;
    let b = 10;
    let i = 0;
    while( a <= b ){
        if ( a == b ){
            txt += a;
        }else {
            txt += b + ' ' + a + ' ';
        }
        a++;
        b--;
    }
    return txt;
}



// Task 12
// Прочитайте о цикле <a href = "https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Statements/do...while"
// target = "_blank" >do while</a>. Напишите код:
// let a = 0;
// do
//     console.log('do while work');
// while (a < 0);

// let b = 0;
// while (b < 0) {
//     console.log('while work');
// }

// изучите вывод.Как видите, цикл do while срабатывает минимум один раз в любом случае.Т.е.вначале идет срабатывание, а потом проверка.

function func_12() {

}

// Task 13
// Напишите функцию func_13 которая возвращает строку, от 100 до 0 включительно.Используем цикл do while.

function func_13() {
    let a = 100;
    let txt = '';

    do {
        txt += a + ' ';
        a--;
    } while (a >= 0);

    return txt;
}



// Task 14
// Стаханов в первый день своей работы добыл 5 тонн угля.Во второй - на 30 % больше от предыдущего дня .Напишите функцию func_14 которая вернет день,
// когда Стаханова побьют:) все, кто с ним работает, этот день наступит тогда, когда Стаханов в день добудет 132 тонны угля.Используйте для решения do while.
// Считаем, что каждый день Стаханов дает угля на 30% больше предыдущего.

function func_14() {
    let ton = 5;
    let day = 1;

    do {
        ton += ton / 100 * 30;
        day++;
    } while (ton <= 132);

    return day;
}



// Task 15
// Гермиона Грейнджер в первый день наварила 1.1 литра зелья.Во второй день на 0.3 литра зелья больше.Напишите функцию func_15, которая вернет день,
// когда в Хоргвардсе не останется пустых котлов(суммарный объем котлов в замке 568 литров).Обратите внимание, что вам нужно найти суммарных объем
// сваренного зелья, а не дневной объем.Используем do while.

function func_15() {
    let liters = 1.1;
    let day = 1;

    do {
        liters += liters + 0.3;
        day++;
    } while (liters <= 568);

    return day;
}



// Task 16
// На странице есть четыре параграфа p.task-16. Используя цикл do ..while посчитайте количество параграфов p.task-16 и если число
// четное - верните значение, если нет - верните false.Код напишите в функции func_16.

function func_16() {
    let task = document.querySelectorAll('.task-16');
    let i = 0;
    do {
        i++;
    }while (i < task.length);

    if ( i % 2 ){
        return false;
    }else{
        return i;
    }
}



// Task 17
// На странице есть четыре параграфа p.task-16. Используя цикл do ..while выведите в первый p.task-16 - число 1, во второй 2 и т.д.Решение оформите в виде функции func_17.

function func_17() {

    let task = document.querySelectorAll('.task-16');
    let i = 0;

    do {
        task[i].innerHTML = i+1;
        i++;
    }while (i < task.length);

}
func_17();


// Task 18
// На странице есть три параграфа p.task-18. Используя цикл do ..while выведите в первый p.task-18 - число равное количеству параграфов p.task - 18,
// во второй на единицу меньше и т.д.Решение оформите в виде функции func_18.

function func_18() {
    let task = document.querySelectorAll('.task-18');
    let i = 0;
    let k = task.length;
    do {
        task[i].innerHTML = k;
        i++;
        k--;
    }while (k > 0);
}
func_18();



// Task 19
// Напишите функцию func_19, которая возвращает строку вида: 1*3*5*7*9*11*13*15*17*19. Решите с помощью do while.

function func_19() {
    let i = 1;
    let txt = '';

    do {
        if ( i == 1){
            txt += i;
        }else{
            txt += '*' + i;
        }
        i++;
    }while ( i < 20);

    return txt;
}



// Task 20
// Напишите функцию func_20, которая возвращает строку вида:
//     1 * * *
//     * 1 * *
//     * * 1 *
//     * * * 1

function func_20() {
    let i = 0;
    let txt = '';
    while (i < 4) {
        let k = 0;
        while (k < 4) {
            if (k == i) {
                txt += '1';
            }
            else {
                txt += '*';
            }
            k++;
        }
        txt += '<br>';
        i++;
    }
    return txt;
}
